<?php

/**
 * @file
 * Contains helper and installation functions.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function capitalcamp_glue_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.capitalcamp_glue':
      $return_value = '<p>' . t('This module contains all the installation hooks') . '</p>';
      return $return_value;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function capitalcamp_glue_form_webform_submission_registration_form_alter(array &$form, FormStateInterface $form_state) {
  // Show 'Country' as first field.
  $form['elements']['personal_information']['address']['#country__weight'] = -2;
  // Show 'State' next, but conditionally.
  $form['elements']['personal_information']['address']['#state_province__weight'] = -1;
  $form['elements']['personal_information']['address']['#city__weight'] = 0;
  $form['#attached']['library'][] = 'capitalcamp_glue/registration_form';
  return $form;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function capitalcamp_glue_form_user_register_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // @todo come up with a more elegant approach here.
  // Alter login form and add own custom submit handler.
  $form['actions']['submit']['#submit'][] = '_capitalcamp_glue_user_register_form_submit';
}

/**
 * Custom submit handler for registration form.
 */
function _capitalcamp_glue_user_register_form_submit($form, FormStateInterface $form_state) {
  // Set redirect to login form.
  $url = Url::fromUri('internal:/form/registration');
  $form_state->setRedirectUrl($url);
}
